library(readr)
Motor_Vehicle_Collisions_Crashes <- read_csv("Desktop/Data/Motor_Vehicle_Collisions_-_Crashes.csv")
View(Motor_Vehicle_Collisions_Crashes)
q()
1+1
2*2
1+2*5-5
1*2*3*4*5*6*7*8*9*10
10!
factorial(10)
factorial(10)
(1+2)*3-5
source("~/.active-rstudio-document")
source("~/.active-rstudio-document")
source("~/.active-rstudio-document", echo=TRUE)
2*2
x <- 4
x
x+1
x+x
y <- 1+2+3+4
y
a <- 924+124
a*a
income <- 200; taxes <- 30
income
income2 <- taxes2 <-100
age <- c(28, 48, 47, 71, 22, 80, 48, 30, 31)
age_months <- age * 12
purchase <- c(20, 59, 2, 12, 22, 160, 34, 34, 29)
bookstore <- data.fram(age, purchas)
bookstore <- data.frame(age, purchas)
bookstore <- data.frame(age, purchase)
bookstore
View(bookstore)
# When we enter data into a vector, we can put line breaks between
# the commas:
distances <- c(687, 5076, 7270, 967, 6364, 1683, 9394, 5712, 5206,
4317, 9411, 5625, 9725, 4977, 2730, 5648, 3818, 8241,
5547, 1637, 4428, 8584, 2962, 5729, 5325, 4370, 5989,
9030, 5532, 9623)
distances
height <- c(65, 66, 64, 72, 81); weight <- c(130, 150, 145, 133, 200, 280)
people <- data.frame(height, weight)
weight
weight <- c(130 150 145 200 280)
weight <- c(130, 150, 145, 200, 280)
people <- data.frame(height, weight)
people
x <- 1:5
x
y <- 5:1
y
x <- 1:5, 5:1
x <- c(1:5, 5:1)
x
# Compute the mean age of bookstore customers
age <- c(28, 48, 47, 71, 22, 80, 48, 30, 31)
mean(age)
# Compute the correlation between the variables age and purchase
age <- c(28, 48, 47, 71, 22, 80, 48, 30, 31)
purchase <- c(20, 59, 2, 12, 22, 160, 34, 34, 29)
cor(age, purchase)
cor(age, purchase, method = "spearman")
?cor
Sys.time()
mean(height)
cor(height, weight)
?length
lenght(height)
length(height)
sort(height)
?sort
sort(height, decreasing = TRUE)
sqrt(pi)
e^2 * log(4)
exp(2) * log(4)
1/0
0/0
sqrt(-1)
sqrt(complex(1, -1, 0))
install.packages("ggplot2")
library(ggplot2)
msleep
View(msleep)
head(msleep)
tail(msleep)
dim(msleep)
str(msleep)
names(msleep)
?msleep
data(msleep)
summary(msleep)
msleep$sleep_total
mean(msleep$sleep_total)      # Mean
median(msleep$sleep_total)    # Median
max(msleep$sleep_total)       # Max
min(msleep$sleep_total)       # Min
sd(msleep$sleep_total)        # Standard deviation
var(msleep$sleep_total)       # Variance
quantile(msleep$sleep_total)  # Various quantiles
sum(msleep$sleep_total > 8)   # Frequency (count)
mean(msleep$sleep_total > 8)  # Relative frequency (proportion)
mean(msleep$sleep_rem)
?mean
mean(msleep$sleep_rem, na.rm = TRUE)
cor(msleep$sleep_total, msleep$sleep_rem)
?cor
cor(msleep$sleep_total, msleep$sleep_rem, use = "complete.obs")
table(msleep$vore)
proportions(table(msleep$vore))
# Counts:
table(msleep$vore, msleep$conservation)
# Proportions, per row:
proportions(table(msleep$vore, msleep$conservation),
margin = 1)
# Proportions, per column:
proportions(table(msleep$vore, msleep$conservation),
margin = 2)
?diamonds
head(diamonds)
dim(diamonds)
names(diamonds)
View(diamonds)
data(diamonds)
summary(diamonds)
sum(diamonds$carat>3)
table(diamonds$clarity, diamonds$color)
plot(msleep$sleep_total, msleep$sleep_rem)
library(ggplot2)
ggplot(msleep, aes(x = sleep_total, y = sleep_rem)) + geom_point()
plot(msleep$sleep_total, msleep$sleep_rem, pch = 16)
grid()
ggplot(msleep, aes(sleep_total, sleep_rem)) +
geom_point()
ggplot(msleep, aes(sleep_total, awake))+geom_point()
ggplot(msleep, aes(sleep_total, sleep_rem)) +
geom_point() +
xlab("Total sleep time (h)")
ggplot(msleep, aes(sleep_total, sleep_rem)) +
geom_point(colour = "red") +
xlab("Total sleep time (h)")
color()
?color
colors()
ggplot(msleep, aes(sleep_total, sleep_rem, colour = vore)) +
geom_point() +
xlab("Total sleep time (h)")
ggplot(msleep, aes(sleep_total, sleep_rem, colour = sleep_cycle)) +
geom_point() +
xlab("Total sleep time (h)")
ggplot(diamonds, aes(carat, price, color = cut)) + geom_point() + xlab("Weight of the diamond (carat)") + ylab("Price(USD)")
ggplot(diamonds, aes(carat, price, color = cut)) + geom_point(alpha = 1) + xlab("Weight of the diamond (carat)") + ylab("Price(USD)")
ggplot(diamonds, aes(carat, price, color = cut)) + geom_point(alpha = 0.5) + xlab("Weight of the diamond (carat)") + ylab("Price(USD)")
ggplot(diamonds, aes(carat, price, color = cut)) + geom_point(alpha = 0.25) + xlab("Weight of the diamond (carat)") + ylab("Price(USD)")
ggplot(diamonds, aes(carat, price, shape = cut)) + geom_point() + xlab("Weight of the diamond (carat)") + ylab("Price(USD)")
ggplot(diamonds, aes(carat, price, size = cut)) + geom_point() + xlab("Weight of the diamond (carat)") + ylab("Price(USD)")
ggplot(diamonds, aes(carat, price, size = x)) + geom_point() + xlab("Weight of the diamond (carat)") + ylab("Price(USD)")
ggplot(diamonds, aes(carat, price, colour = cut, shape = cut)) +
geom_point(alpha = 0.25) +
xlab("Weight of diamond (carat)") +
ylab("Price (USD)")
ggplot(diamonds, aes(carat, price, colour = cut,
shape = cut, size = x)) +
geom_point(alpha = 0.25) +
xlab("Weight of diamond (carat)") +
ylab("Price (USD)")
ggplot(msleep, aes(brainwt, sleep_total, colour = vore)) +
geom_point() +
xlab("Brain weight") +
ylab("Total sleep time")
ggplot(msleep, aes(brainwt, sleep_total, colour = vore)) +
geom_point() +
xlab("Brain weight") +
ylab("Total sleep time") +
xlim(0, 1.5)
ggplot(msleep, aes(log(brainwt), sleep_total, colour = vore)) +
geom_point() +
xlab("log(Brain weight)") +
ylab("Total sleep time")
ggplot(msleep, aes(brainwt, sleep_total, colour = vore)) +
geom_point() +
xlab("Brain weight (logarithmic scale)") +
ylab("Total sleep time") +
scale_x_log10()
ggplot(msleep, aes(bodywt, brainwt, colour = vore)) +
geom_point() +
xlab("Body weight (logarithmic scale)") +
ylab("Brain weight (logarithmic scale)") +
scale_x_log10() + scale_y_log10()
ggplot(msleep, aes(brainwt, sleep_total)) +
geom_point() +
xlab("Brain weight (logarithmic scale)") +
ylab("Total sleep time") +
scale_x_log10() +
facet_wrap(~ vore)
ggplot(diamonds, aes(carat, price)) + geom_point() + xlab("Weight of diamond (carat)") + ylab("Price (USD)") + scale_x_log10() + facet_wrap(~ cut())
ggplot(diamonds, aes(carat, price)) + geom_point() + xlab("Weight of diamond (carat)") + ylab("Price (USD)") + scale_x_log10() + facet_wrap(~ cut)
?facet_wrap
ggplot(diamonds, aes(carat, price)) + geom_point() + xlab("Weight of diamond (carat)") + ylab("Price (USD)") + scale_x_log10() + facet_wrap(~ cut, nrow = 5)
# Base R:
boxplot(sleep_total ~ vore, data = msleep)
# ggplot2:
ggplot(msleep, aes(vore, sleep_total)) +
geom_boxplot()
boxplot(sleep_total ~ vore, data = msleep)
ggplot(msleep, aes(vore, sleep_total)) +
geom_boxplot()
ggplot(diamonds, aes(cut)) + geom_boxplot()
ggplot(diamonds, aes(cut, price)) + geom_boxplot()
?geom_boxplot()
ggplot(diamonds, aes(price, cut)) + geom_boxplot()
ggplot(diamonds, aes(price, reorder(cut, price, median))) + geom_boxplot()
ggplot(diamonds, aes(price, cut)) + geom_boxplot()
ggplot(diamonds, aes(price, reorder(cut, price, median))) + geom_boxplot()
ggplot(diamonds, aes(price, reorder(cut, price, median))) + geom_boxplot() + geom_jitter(size = 0.1, alpha = 0.2)
ggplot(diamonds, aes(cut, price)) +
geom_boxplot(colour = "magenta", fill = "turquoise")
ggplot(diamonds, aes(reorder(cut, price, median), price)) +
geom_boxplot(colour = "magenta", fill = "turquoise")
ggplot(diamonds, aes(reorder(cut, price), price)) +
geom_boxplot(colour = "magenta", fill = "turquoise") +
geom_jitter(size = 0.1, alpha = 0.2)
hist(msleep$sleep_total)
ggplot(msleep, aes(sleep_total)) +
geom_histogram()
ggplot(diamonds, aes(price)) +
geom_histogram()
ggplot(diamonds, aes(price)) +
geom_histogram() + facet_wrap(cut)
ggplot(diamonds, aes(price)) +
geom_histogram() +
facet_wrap(~ cut)
ggplot(diamonds, aes(price)) +
geom_histogram(colour = "black") +
facet_wrap(~ cut)
ggplot(msleep, aes(vore)) +
geom_bar()
barplot(table(msleep$vore))
ggplot(msleep, aes(factor(1), fill = vore)) +
geom_bar()
ggplot(diamonds)
ggplot(diamonds, aes(cut)) + geom_bar
ggplot(diamonds, aes(cut)) + geom_bar()
ggplot(diamonds, aes(cut)) + geom_bar(fill = "blue")
?geom_bar
ggplot(diamonds, aes(cut)) + geom_bar(fill = "blue", width = 0.5)
ggplot(diamonds, aes(cut), fill = clarity) + geom_bar()
ggplot(diamonds, aes(cut), fill = clarity) + geom_bar(position = "dodge")
ggplot(diamonds, aes(cut)) + geom_bar() + coord_flip()
library(ggplot2)
myPlot <- ggplot(msleep, aes(sleep_total, sleep_rem)) +
geom_point()
myPlot
myPlot + xlab("I forgot to add a label!")
ggsave("myplot.pdf", myPlot, width = 5, height = 5)
pdf("myplot.pdf", width = 5, height = 5)
myPlot
dev.off
dev.off()
ggplot(diamonds, aes(cut)) + geom_bar() + coord_flip()
diamondPlot <-  ggplot(diamonds, aes(cut)) + geom_bar() + coord_flip()
ggsave("diamondPlot.pdf", diamondPlot, width = 4, height = 4)
?ggsave
x <- 6
x <- 6
source("~/HW3.1.R", echo=TRUE)
source("~/HW3.1.R", echo=TRUE)
source("~/HW3.1.R", echo=TRUE)
source("~/HW3.1.R", echo=TRUE)
source("~/HW3.1.R", echo=TRUE)
source("~/HW3.1.R", echo=TRUE)
source("~/HW3.1.R", echo=TRUE)
source("~/HW3.1.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(anorexiaData)
View(anorexiaData)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Anorexia.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
View(df)
View(df)
source("~/.active-rstudio-document", echo=TRUE)
View(df)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Chicago.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Chicago.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/HW3.Chicago.R", echo=TRUE)
install.packages("moments")
source("~/Desktop/university-of-the-cumberlands/R/HW3.Chicago.R", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/.active-rstudio-document", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/hw1/HW1.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/hw1/murder rates in US/murder_rates.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/hw1/murder rates in US/murder_rates.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/hw1/murder_rates_US/murder_rates.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/hw1/murder_rates_US/murder_rates.R", echo=TRUE)
source("~/Desktop/university-of-the-cumberlands/R/hw1/chicago house income/chicago_housing.R", echo=TRUE)
